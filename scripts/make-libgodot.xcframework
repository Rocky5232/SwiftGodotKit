#!/bin/bash
set -e
if test ! -e make-libgodot.xcframework; then
    echo this script needs to be executed from the SwiftGodotKit/scripts directory
    exit 1
fi
if test x$3 = x; then
   echo usage is: make-libgodot.xcframework SwiftGodotDIR libgodotDIR OUTPUT_DIR
   exit 1
fi
SWIFTGODOT_SOURCE_DIR=$1
LIBGODOT_SOURCE_DIR=$2
OUTPUT_DIR=$3

# Remote build stuff
intel=macpro
arm=studio.local
arm2=localhost
dir=$LIBGODOT_SOURCE_DIR

# The hash for the godot that has been modified to be embeddable
# lives in libgodot_project/godot in migerans tree
hash=92f6c34d10de3f15e214ce3e7604651f3bada446
target_kind=template_debug
build_base="scons target=$target_kind library_type=shared_library debug_symbols=yes"

build() {
    host=$1
    build=$2
    file=$3
    echo "starting build on $host"
    ssh -A $host "cd $dir && git fetch && git reset --hard $hash && rm -rf bin && $build"
    scp $host:$dir/bin/$file $file
}

arm_dylib=libgodot.macos.$target_kind.arm64.dylib
intel_dylib=libgodot.macos.$target_kind.dev.x86_64.dylib
ios_lib=libgodot.ios.$target_kind.dev.arm64.a
iossim_lib=libgodot.ios.$target_kind.dev.arm64.simulator.a
iossimx86_lib=libgodot.ios.$target_kind.dev.x86_64.simulator.a

if test x$SKIP = x; then
  build $intel "/usr/local/bin/$build_base platform=macos dev_build=yes" $intel_dylib
  build $arm "/opt/homebrew/bin/$build_base platform=macos vulkan_sdk_path=~/MoltenVK/" $arm_dylib
  build $arm "/opt/homebrew/bin/$build_base platform=ios vulkan_sdk_path=~/MoltenVK/ dev_build=yes" $ios_lib
  build $arm "/opt/homebrew/bin/$build_base platform=ios ios_simulator=yes vulkan_sdk_path=~/MoltenVK/ dev_build=yes" $iossim_lib
  build $arm "/opt/homebrew/bin/$build_base platform=ios ios_simulator=yes arch=x86_64 vulkan_sdk_path=~/MoltenVK/ dev_build=yes" $iossimx86_lib
else
  cp $LIBGODOT_SOURCE_DIR/bin/libgodot.macos.template_debug.arm64.dylib .
fi

# Now make the xcframework
rm -rf $OUTPUT_DIR/libgodot.xcframework
rm -rf $OUTPUT_DIR/libgodot.xcframework.zip
tmp=/tmp/dir-$$
mkdir $tmp
cp $SWIFTGODOT_SOURCE_DIR/Sources/GDExtension/include/gdextension_interface.h $tmp/gdextension_interface.h
cp $LIBGODOT_SOURCE_DIR/core/extension/libgodot.h $tmp/libgodot.h
cat > $tmp/module.modulemap << EOF
module libgodot {
    header "libgodot.h"
    export *
}
EOF

rm -rf libgodot.xcframework
rm -rf libgodot_ios.xcframework

if test x$SKIP = x; then
    install_name_tool -id @rpath/libgodot.dylib $arm_dylib
    install_name_tool -id @rpath/libgodot.dylib $intel_dylib
    lipo -create -output libgodot.dylib -arch arm64 $arm_dylib -arch x86_64 $intel_dylib
    lipo -create -output libgodotSim.a -arch arm64 $iossim_lib -arch x86_64 $iossimx86_lib
    xcodebuild -create-xcframework -library libgodot.dylib -headers $tmp -output libgodot.xcframework
    xcodebuild -create-xcframework -library libgodotSim.a -headers $tmp -output libgodot_ios.xcframework
else
    install_name_tool -id @rpath/libgodot.dylib $arm_dylib
    lipo -create -output libgodot.dylib -arch arm64 $arm_dylib
    xcodebuild -create-xcframework -library libgodot.dylib -headers $tmp -output libgodot.xcframework
fi
zip -r $OUTPUT_DIR/libgodot.xcframework.zip libgodot.xcframework
checksum=`swift package compute-checksum $OUTPUT_DIR/libgodot.xcframework.zip`

#rm -rf /tmp/dir-$$
exit 0


